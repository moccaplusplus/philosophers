philosophers.program.cmdLine=java -jar philosophers.jar
philosophers.program.title=The N Philosophers Problem

philosophers.validation.errors=Errors:
philosophers.validation.negative={0} should not be negative.
philosophers.validation.lambdaEven=--lambda should contain odd number of comma-separated float values.
philosophers.validation.lambdaBiggerThanMi=--lambda values should be smaller or equal to --mi value.

philosophers.chart.title=Event Table
philosophers.chart.categoryAxisLabel=Philosophers
philosophers.chart.timeAxisLabel=Time Unit

philosophers.report.smallTitle=Event-Driven Simulation Report

philosophers.report.stats.title=Stats
philosophers.report.stats.which=Philosopher
philosophers.report.stats.firstMeal=First Meal At
philosophers.report.stats.firstRejection=First Rejection At
philosophers.report.stats.rejectedCount=Rejected Count
philosophers.report.stats.acceptedCount=Accepted Count
philosophers.report.stats.mealTime=Meal Time

philosophers.settings.title=Settings
philosophers.settings.n.symbol=N
philosophers.settings.n.shortInfo=Philosophers count
philosophers.settings.t.symbol=T
philosophers.settings.t.shortInfo=Time units
philosophers.settings.mi.symbol=Mi
philosophers.settings.mi.shortInfo=Bowl's serving time - same for each bowl
philosophers.settings.lambda.symbol=Lambda
philosophers.settings.lambda.shortInfo=Philosopher's meal request frequency - specific for each philosopher
philosophers.settings.distribution.symbol=Distribution
philosophers.settings.distribution.shortInfo=Case-insensitive, one of values: FIXED - mi and lambda taken as are, RANDOM - mi and lambda adjusted randomly
philosophers.settings.noGui.shortInfo=Do not show GUI to adjust settings
philosophers.settings.help.shortInfo=Display help
philosophers.settings.n.log=N (Philosophers count): {0}
philosophers.settings.t.log=T (Time units): {0}
philosophers.settings.mi.log=Mi (Bowl''s serving time - same for each bowl): {0}
philosophers.settings.lambda.log=Lambda (Philosopher''s meal request frequency): {0}
philosophers.settings.distribution.log=Distribution (Case-insensitive, one of values: FIXED - mi and lambda are taken as are, RANDOM - mi and lambda are adjusted randomly): {0}

philosophers.report.logs.title=Logs
philosophers.log.clock.started=At {0,number} [time unit]: Clock started.
philosophers.log.clock.stopped=At {0,number} [time unit]: Clock stopped.
philosophers.log.meal.requested=At {0,number} [time unit]: Philosopher #{1,number} requested a meal.
philosophers.log.meal.rejected=At {0,number} [time unit]: Bowl #{1,number} rejected a meal request.
philosophers.log.meal.started=At {0,number} [time unit]: Bowl #{1,number} accepted a meal request - Philosopher #{1,number} started his/her meal.
philosophers.log.meal.finished=At {0,number} [time unit]: Philosopher #{1,number} finished his/her meal - Bowl #{1,number} is free to accept new requests.

philosophers.log.report.writing=Writing report...
philosophers.log.report.created=Report created at: {0}.

gui.main.label.output=Console:
gui.main.button.openReport=Open Report
gui.main.button.start=Start
gui.main.button.reset=Reset
